                      (         init.asm):00001                 NAM     INIT.TXT
                      (         init.asm):00002                 OPT     pag
                      (         init.asm):00003         *       LEN     96
                      (         init.asm):00004                 PAG
                      (         init.asm):00005                 PRAGMA CD
                      (         init.asm):00006         *************************************************
                      (         init.asm):00007         *                                               *
                      (         init.asm):00008         *       Flex 2.9:1 initialization code          *
                      (         init.asm):00009         *                                               *
                      (         init.asm):00010         *************************************************
                      (         init.asm):00011         
     C080             (         init.asm):00012         LNBUFF  EQU     $C080
     C100             (         init.asm):00013         STARTR  EQU     $C100
     C840             (         init.asm):00014         SYSFCB  EQU     $C840
                      (         init.asm):00015         
     CC0E             (         init.asm):00016         SMONTH  EQU     $CC0E
     CC14             (         init.asm):00017         LNBUFP  EQU     $CC14
     CC16             (         init.asm):00018         ESCRTN  EQU     $CC16
     CC2B             (         init.asm):00019         MEMEND  EQU     $CC2B
     CC33             (         init.asm):00020         CPUTYP  EQU     $CC33
     CC4E             (         init.asm):00021         PROMPT  EQU     $CC4E
                      (         init.asm):00022         
     CD00             (         init.asm):00023         COLDST  EQU     $CD00
     CD03             (         init.asm):00024         WARMST  EQU     $CD03
     CD06             (         init.asm):00025         RENTER  EQU     $CD06
     CD09             (         init.asm):00026         INCH    EQU     $CD09
     CD0C             (         init.asm):00027         INCH2   EQU     $CD0C
     CD0F             (         init.asm):00028         OUTCH   EQU     $CD0F
     CD12             (         init.asm):00029         OUTCH2  EQU     $CD12
     CD1B             (         init.asm):00030         INBUFF  EQU     $CD1B
     CD1E             (         init.asm):00031         PSTRNG  EQU     $CD1E
     CD24             (         init.asm):00032         PRCRLF  EQU     $CD24
     CD48             (         init.asm):00033         INDECM  EQU     $CD48
     CD4E             (         init.asm):00034         STAT    EQU     $CD4E
                      (         init.asm):00035         
     D0F0             (         init.asm):00036         ZD0F0   EQU     $D0F0
     D0F1             (         init.asm):00037         ZD0F1   EQU     $D0F1
                      (         init.asm):00038         
     D370             (         init.asm):00039         STIME   EQU     $D370
                      (         init.asm):00040         
     D3E7             (         init.asm):00041         IHNDLR  EQU     $D3E7
     D3ED             (         init.asm):00042         TIMOFF  EQU     $D3ED
     D3EF             (         init.asm):00043         TIMON   EQU     $D3EF
     D3F1             (         init.asm):00044         TMINIT  EQU     $D3F1
     D3F5             (         init.asm):00045         TRMINT  EQU     $D3F5
     D3F7             (         init.asm):00046         TRMCHK  EQU     $D3F7
     D3F9             (         init.asm):00047         TIMOUT  EQU     $D3F9
     D3FB             (         init.asm):00048         TIMINE  EQU     $D3FB
     D3FD             (         init.asm):00049         ZD3FD   EQU     $D3FD
                      (         init.asm):00050         
     D406             (         init.asm):00051         FMSCAL  EQU     $D406
                      (         init.asm):00052         
     DE0F             (         init.asm):00053         DCHECK  EQU     $DE0F
     DE18             (         init.asm):00054         DWARM   EQU     $DE18
     DE15             (         init.asm):00055         DINIT   EQU     $DE15
     DE0C             (         init.asm):00056         DDRIVE  EQU     $DE0C
                      (         init.asm):00057         
     DFD0             (         init.asm):00058         ZDFD0   EQU     $DFD0
     DFDC             (         init.asm):00059         ZDFDC   EQU     $DFDC
     DFDD             (         init.asm):00060         ZDFDD   EQU     $DFDD
                      (         init.asm):00061         
     E005             (         init.asm):00062         ZE005   EQU     $E005
     E045             (         init.asm):00063         ZE045   EQU     $E045
     E085             (         init.asm):00064         ZE085   EQU     $E085
     E090             (         init.asm):00065         ZE090   EQU     $E090
     E0C5             (         init.asm):00066         ZE0C5   EQU     $E0C5
                      (         init.asm):00067         
     F810             (         init.asm):00068         ZF810   EQU     $F810
     FFF0             (         init.asm):00069         ZFFF0   EQU     $FFF0
     FFFC             (         init.asm):00070         ZFFFC   EQU     $FFFC
     FFFD             (         init.asm):00071         ZFFFD   EQU     $FFFD
                      (         init.asm):00072                 pag
                      (         init.asm):00073         
                      (         init.asm):00074         ****************************************************
                      (         init.asm):00075         
                      (         init.asm):00076         
                      (         init.asm):00077         *
                      (         init.asm):00078         * STARTUP ROUTINE
                      (         init.asm):00079         * THIS ROUTINE INITIALIZES CERTAIN PARAMETERS, GETS
                      (         init.asm):00080         * DATE FROM USER, AND EXECUTES A STARTUP.TXT FILE.
                      (         init.asm):00081         
                      (         init.asm):00082                 ORG     $C400
                      (         init.asm):00083         
C400 2005             (         init.asm):00084 [3]     STAR    BRA     STAR0
C402 822E893A81       (         init.asm):00085         Vers    FCB     $82,$2E,$89,$3A,$81
                      (         init.asm):00086         
C407 8639             (         init.asm):00087 [2]     STAR0   LDA     #$39            SET UP RTS
C409 B7D3FD           (         init.asm):00088 [5]             STA     >ZD3FD          disable re-entry to this code
                      (         init.asm):00089         
C40C CCCD03           (         init.asm):00090 [3]             LDD     #$CD03          setup 'escape routine' address
C40F FDCC16           (         init.asm):00091 [6]             STD     >ESCRTN
                      (         init.asm):00092         
C412 FCD3F7           (         init.asm):00093 [6]             LDD     >TRMCHK         get address of terminal status check routine
C415 FDCD4F           (         init.asm):00094 [6]             STD     >STAT+1         set in FLEX status check jump
                      (         init.asm):00095         
C418 FCD3F9           (         init.asm):00096 [6]             LDD     >TIMOUT         get address of terminal output routine
C41B FDCD10           (         init.asm):00097 [6]             STD     >OUTCH+1        set in FLEX out char jump
C41E FDCD13           (         init.asm):00098 [6]             STD     >OUTCH2+1       set in FLEX alternate out char jump
                      (         init.asm):00099         
C421 FCD3FB           (         init.asm):00100 [6]             LDD     >TIMINE         get address of terminal input routine
C424 FDCD0A           (         init.asm):00101 [6]             STD     >INCH+1         set in FLEX in char jump
C427 FDCD0D           (         init.asm):00102 [6]             STD     >INCH2+1        set in FLEX alt in char jump
                      (         init.asm):00103         
C42A AD9FD3F5         (         init.asm):00104 [7+5]           JSR     [TRMINT]        do terminal init
C42E 8EC533           (         init.asm):00105 [3]             LDX     #ZC810          point to Flex version signon
C431 BDCD1E           (         init.asm):00106 [8]             JSR     >PSTRNG         print to terminal
C434 BDCD24           (         init.asm):00107 [8]             JSR     >PRCRLF         and CRLF
                      (         init.asm):00108         
C437 FCCC4E           (         init.asm):00109 [6]     ZC43A   LDD     >PROMPT         get  current prompt pointer
C43A 3406             (         init.asm):00110 [5+2]           PSHS    B,A             save it
C43C 8EC561           (         init.asm):00111 [3]             LDX     #ZC82E          request for date
C43F BFCC4E           (         init.asm):00112 [6]             STX     >PROMPT         set new prompt pointer
C442 BDCD1E           (         init.asm):00113 [8]             JSR     >PSTRNG         do prompt
C445 BDCD1B           (         init.asm):00114 [8]             JSR     >INBUFF         get date
C448 3506             (         init.asm):00115 [5+2]           PULS    B,A             restore prompt pointer
C44A FDCC4E           (         init.asm):00116 [6]             STD     >PROMPT
C44D 108ECC0E         (         init.asm):00117 [4]             LDY     #SMONTH         point Y reg to date regs
C451 17008B           (         init.asm):00118 [9]             LBSR     ZC4A0           convert month from ascii
C454 25E1             (         init.asm):00119 [3]             BCS     ZC43A           no good - retry
                      (         init.asm):00120         
C456 170086           (         init.asm):00121 [9]             LBSR     ZC4A0           convert day from ascii
C459 25DC             (         init.asm):00122 [3]             BCS     ZC43A           no good - retry
                      (         init.asm):00123         
C45B 170081           (         init.asm):00124 [9]             LBSR     ZC4A0           convert year from ascii
C45E 25D7             (         init.asm):00125 [3]             BCS     ZC43A           no good - retry
                      (         init.asm):00126         
C460 108ED370         (         init.asm):00127 [4]             LDY     #STIME          point Y reg to system time regs
C464 170078           (         init.asm):00128 [9]             LBSR     ZC4A0
C467 25CE             (         init.asm):00129 [3]             BCS     ZC43A           no good - retry
                      (         init.asm):00130         
C469 170073           (         init.asm):00131 [9]             LBSR     ZC4A0
C46C 25C9             (         init.asm):00132 [3]             BCS     ZC43A           no good - retry
                      (         init.asm):00133         
C46E 17006E           (         init.asm):00134 [9]             LBSR     ZC4A0
C471 25C4             (         init.asm):00135 [3]             BCS     ZC43A           no good - retry
C473 7FD373           (         init.asm):00136 [7]             CLR     STIME+3         clear tick counter
                      (         init.asm):00137         
C476 BDCD24           (         init.asm):00138 [8]             JSR     >PRCRLF         do CRLF
C479 BDDE15           (         init.asm):00139 [8]             JSR     >DINIT          init the disk drivers
                      (         init.asm):00140         
C47C 3402             (         init.asm):00141 [5+1]                   PSHS    A
C47E 865B             (         init.asm):00142 [2]                     LDA     #'[
C480 BDCD0F           (         init.asm):00143 [8]                     JSR     OUTCH
C483 3502             (         init.asm):00144 [5+1]                   PULS    A
                      (         init.asm):00145         
                      (         init.asm):00146         
C485 8EC840           (         init.asm):00147 [3]             LDX     #SYSFCB         point to STARTUP.TXT FCB
C488 BDDE0F           (         init.asm):00148 [8]             JSR     >DCHECK         do disk check
C48B 261B             (         init.asm):00149 [3]             BNE     initerr
                      (         init.asm):00150         
C48D 3402             (         init.asm):00151 [5+1]                   PSHS    A
C48F 865D             (         init.asm):00152 [2]                     LDA     #']
C491 BDCD0F           (         init.asm):00153 [8]                     JSR     OUTCH
C494 3502             (         init.asm):00154 [5+1]                   PULS    A
                      (         init.asm):00155         
C496 8EC840           (         init.asm):00156 [3]             LDX     #SYSFCB         point to STARTUP.TXT FCB
C499 8601             (         init.asm):00157 [2]             LDA     #$01            set for read operation
C49B A784             (         init.asm):00158 [4+0]           STA     ,X
C49D BDD406           (         init.asm):00159 [8]             JSR     >FMSCAL
C4A0 2712             (         init.asm):00160 [3]             BEQ     ZC47E           no error
                      (         init.asm):00161         
C4A2 A601             (         init.asm):00162 [4+1]           LDA     $01,X
C4A4 8104             (         init.asm):00163 [2]             CMPA    #$04            file not found error?
C4A6 264D             (         init.asm):00164 [3]             BNE     ZC4B2           no -
C4A8                  (         init.asm):00165         initerr:
                      (         init.asm):00166         
C4A8 3402             (         init.asm):00167 [5+1]                   PSHS    A
C4AA 8621             (         init.asm):00168 [2]                     LDA     #'!
C4AC BDCD0F           (         init.asm):00169 [8]                     JSR     OUTCH
C4AF 3502             (         init.asm):00170 [5+1]                   PULS    A
                      (         init.asm):00171         
                      (         init.asm):00172         
C4B1 7ECD03           (         init.asm):00173 [4]             JMP     >WARMST         yes - ignore file
                      (         init.asm):00174         
C4B4                  (         init.asm):00175         ZC47E
                      (         init.asm):00176         
C4B4 3402             (         init.asm):00177 [5+1]                   PSHS    A
C4B6 8625             (         init.asm):00178 [2]                     LDA     #'%
C4B8 BDCD0F           (         init.asm):00179 [8]                     JSR     OUTCH
C4BB 3502             (         init.asm):00180 [5+1]                   PULS    A
                      (         init.asm):00181         
                      (         init.asm):00182         
C4BD 108EC080         (         init.asm):00183 [4]             LDY     #LNBUFF         init line buffer pointer
C4C1 10BFCC14         (         init.asm):00184 [7]             STY     >LNBUFP
C4C5 C680             (         init.asm):00185 [2]             LDB     #$80            set byte count to move
                      (         init.asm):00186         
C4C7 BDD406           (         init.asm):00187 [8]     ZC488   JSR     >FMSCAL         get byte from startup.txt
C4CA 2629             (         init.asm):00188 [3]             BNE     ZC4B2           error
C4CC 5A               (         init.asm):00189 [2]             DECB                    decrement count
C4CD 2726             (         init.asm):00190 [3]             BEQ     ZC4B2           done
                      (         init.asm):00191         
C4CF A7A0             (         init.asm):00192 [4+2]           STA     ,Y+             put character in line buffer
C4D1 810D             (         init.asm):00193 [2]             CMPA    #$0D            see if EOL character
C4D3 26F2             (         init.asm):00194 [3]             BNE     ZC488           no - loop
                      (         init.asm):00195         
C4D5 8604             (         init.asm):00196 [2]             LDA     #$04            yes - close file
C4D7 A784             (         init.asm):00197 [4+0]           STA     ,X
C4D9 BDD406           (         init.asm):00198 [8]             JSR     >FMSCAL
                      (         init.asm):00199         
C4DC 7ECD06           (         init.asm):00200 [4]             JMP     >RENTER         re-enter FLEX with command in line buffer
                      (         init.asm):00201         
                      (         init.asm):00202         *       convert ascii to decimal
                      (         init.asm):00203         
C4DF BDCD48           (         init.asm):00204 [8]     ZC4A0   JSR     >INDECM
C4E2 3410             (         init.asm):00205 [5+2]           PSHS    X
C4E4 250D             (         init.asm):00206 [3]             BCS     ZC4B0
C4E6 A6A4             (         init.asm):00207 [4+0]           LDA     ,Y
C4E8 5D               (         init.asm):00208 [2]             TSTB                    see if any valid decimal digits entered
C4E9 1A01             (         init.asm):00209 [3]             ORCC    #$01            set carry flag for error
C4EB 2704             (         init.asm):00210 [3]             BEQ     ZC4AE           no - return error
                      (         init.asm):00211         
C4ED A661             (         init.asm):00212 [4+1]           LDA     $01,S           yes - get returned byte
C4EF 1CFE             (         init.asm):00213 [3]             ANDCC   #$FE            set carry flag = 0 if no error
C4F1 A7A0             (         init.asm):00214 [4+2]   ZC4AE   STA     ,Y+             put in callers buffer
C4F3 3586             (         init.asm):00215 [5+4]   ZC4B0   PULS    PC,B,A          return
                      (         init.asm):00216         
                      (         init.asm):00217         *       error in startup file - report it
                      (         init.asm):00218         
C4F5 8EC520           (         init.asm):00219 [3]     ZC4B2   LDX     #ZC555          can't run startup message
C4F8 BDCD1E           (         init.asm):00220 [8]             JSR     >PSTRNG
                      (         init.asm):00221         
C4FB 7ECD03           (         init.asm):00222 [4]             JMP     >WARMST
                      (         init.asm):00223         
                      (         init.asm):00224         *       fix up number of K of memory available message
                      (         init.asm):00225         
C4FE 3414             (         init.asm):00226 [5+3]   ZC4BB   PSHS    X,B
C500 8EC55E           (         init.asm):00227 [3]             LDX     #ZC82B          'K' message
C503 8604             (         init.asm):00228 [2]             LDA     #$04
C505 2006             (         init.asm):00229 [3]             BRA     ZC4CA
                      (         init.asm):00230         
                      (         init.asm):00231         *
                      (         init.asm):00232         
C507 800A             (         init.asm):00233 [2]     ZC4C4   SUBA    #$0A
C509 A784             (         init.asm):00234 [4+0]           STA     ,X
C50B 8601             (         init.asm):00235 [2]             LDA     #$01
                      (         init.asm):00236         
                      (         init.asm):00237         *
                      (         init.asm):00238         
C50D AB82             (         init.asm):00239 [4+2]   ZC4CA   ADDA    ,-X
C50F 8A30             (         init.asm):00240 [2]             ORA     #$30
C511 A784             (         init.asm):00241 [4+0]           STA     ,X
C513 8139             (         init.asm):00242 [2]             CMPA    #$39
C515 22F0             (         init.asm):00243 [3]             BHI     ZC4C4
C517 3594             (         init.asm):00244 [5+5]           PULS    PC,X,B
                      (         init.asm):00245         
                      (         init.asm):00246         *       return status that no no RTC is available
                      (         init.asm):00247         *       but MPT does exist
                      (         init.asm):00248         
C519 AD9FD3F1         (         init.asm):00249 [7+5]   ZC4D6   JSR     [TMINIT]        init timer
C51D 8602             (         init.asm):00250 [2]             LDA     #$02            set flag for MPT
C51F 39               (         init.asm):00251 [5]             RTS
                      (         init.asm):00252         
                      (         init.asm):00253         *       startup file error message
                      (         init.asm):00254         
C520 43616E2774207275 (         init.asm):00255         ZC555   FCC     "Can't run STARTUP."
     6E20535441525455
     502E
C532 04               (         init.asm):00256                 FCB     $04
                      (         init.asm):00257         
                      (         init.asm):00258         *       FLEX startup signon message
                      (         init.asm):00259         
C533 464C455820666F72 (         init.asm):00260         ZC810   FCC     "FLEX for Nhyodyne 6809 Version 2.9:2 - "
     204E68796F64796E
     6520363830392056
     657273696F6E2032
     2E393A32202D20
C55A 00000000         (         init.asm):00261                 FCB     $00,$00,$00,$00
                      (         init.asm):00262         
C55E 4B               (         init.asm):00263         ZC82B   FCC     "K"
C55F 15               (         init.asm):00264                 FCB     $15
C560 04               (         init.asm):00265                 FCB     $04
                      (         init.asm):00266         
                      (         init.asm):00267         *       Date prompt
                      (         init.asm):00268         
C561 4461746520616E64 (         init.asm):00269         ZC82E   FCC     "Date and TIME (MM/DD/YY HH/MM/SS)? "
     2054494D4520284D
     4D2F44442F595920
     48482F4D4D2F5353
     293F20
C584 04               (         init.asm):00270                 FCB     $04
                      (         init.asm):00271         
                      (         init.asm):00272                 ORG     SYSFCB
                      (         init.asm):00273         
C840 FF               (         init.asm):00274                 FCB     $FF
C841 00               (         init.asm):00275                 FCB     $00
C842 00               (         init.asm):00276                 FCB     $00
C843 00               (         init.asm):00277                 FCB     $00
C844 73746172747570   (         init.asm):00278                 FCC     "startup"
C84B 00               (         init.asm):00279                 FCB     $00
C84C 747874           (         init.asm):00280                 FCC     "txt"
C84F 00               (         init.asm):00281                 FCB     $00
                      (         init.asm):00282         
                      (         init.asm):00283         *************************************************
                      (         init.asm):00284         *                                               *
                      (         init.asm):00285         *       FLEX entry point after boot             *
                      (         init.asm):00286         *                                               *
                      (         init.asm):00287         *         this must start at $C850              *
                      (         init.asm):00288         *                                               *
                      (         init.asm):00289         *************************************************
                      (         init.asm):00290         
C850 1A50             (         init.asm):00291 [3]     SFRES1  ORCC    #$50
C852 10CEC080         (         init.asm):00292 [4]             LDS     #LNBUFF
C856 FCDFDC           (         init.asm):00293 [6]             LDD     >ZDFDC
C859 BED0F0           (         init.asm):00294 [6]             LDX     >ZD0F0
C85C 3416             (         init.asm):00295 [5+4]           PSHS    X,B,A
C85E 8E99AA           (         init.asm):00296 [3]             LDX     #$99AA
C861 108EC200         (         init.asm):00297 [4]             LDY     #STARTR+256
C865 C6FF             (         init.asm):00298 [2]             LDB     #$FF
                      (         init.asm):00299         
C867 1700B0           (         init.asm):00300 [9]     ZC867   LBSR    ZC91A
C86A BFD0F0           (         init.asm):00301 [6]             STX     >ZD0F0
C86D BCD0F0           (         init.asm):00302 [7]             CMPX    >ZD0F0
C870 2616             (         init.asm):00303 [3]             BNE     ZC888
C872 3404             (         init.asm):00304 [5+1]           PSHS    B
                      (         init.asm):00305         
C874 1700A3           (         init.asm):00306 [9]     ZC874   LBSR    ZC91A
C877 F7D0F1           (         init.asm):00307 [5]             STB     >ZD0F1
C87A C001             (         init.asm):00308 [2]             SUBB    #$01
C87C 24F6             (         init.asm):00309 [3]             BCC     ZC874
                      (         init.asm):00310         
C87E 3504             (         init.asm):00311 [5+1]           PULS    B
C880 170097           (         init.asm):00312 [9]             LBSR    ZC91A
C883 F1D0F1           (         init.asm):00313 [5]             CMPB    >ZD0F1
C886 2701             (         init.asm):00314 [3]             BEQ     ZC889
C888 4F               (         init.asm):00315 [2]     ZC888   CLRA
                      (         init.asm):00316         
C889 A7A2             (         init.asm):00317 [4+2]   ZC889   STA     ,-Y
C88B 2703             (         init.asm):00318 [3]             BEQ     ZC890
C88D 17FC6E           (         init.asm):00319 [9]             LBSR    ZC4BB
                      (         init.asm):00320         
C890 C001             (         init.asm):00321 [2]     ZC890   SUBB    #$01
C892 24D3             (         init.asm):00322 [3]             BCC     ZC867
                      (         init.asm):00323         
C894 3516             (         init.asm):00324 [5+4]           PULS    X,B,A
C896 FDFFFC           (         init.asm):00325 [6]             STD     >ZFFFC
C899 BFD0F0           (         init.asm):00326 [6]             STX     >ZD0F0
C89C 4F               (         init.asm):00327 [2]             CLRA
C89D 8EC100           (         init.asm):00328 [3]             LDX     #STARTR
C8A0 F6DFDC           (         init.asm):00329 [5]             LDB     >ZDFDC
C8A3 C80F             (         init.asm):00330 [2]             EORB    #$0F
C8A5 6F8B             (         init.asm):00331 [6+4]           CLR     D,X
C8A7 F6DFDD           (         init.asm):00332 [5]             LDB     >ZDFDD
C8AA C80F             (         init.asm):00333 [2]             EORB    #$0F
C8AC 6F8B             (         init.asm):00334 [6+4]           CLR     D,X
C8AE 8D72             (         init.asm):00335 [7]             BSR     ZC922
C8B0 5D               (         init.asm):00336 [2]             TSTB
C8B1 2705             (         init.asm):00337 [3]             BEQ     ZC8B8
                      (         init.asm):00338         
C8B3 6FA0             (         init.asm):00339 [6+2]   ZC8B3   CLR     ,Y+
C8B5 5A               (         init.asm):00340 [2]             DECB
C8B6 26FB             (         init.asm):00341 [3]             BNE     ZC8B3
                      (         init.asm):00342         
C8B8 3134             (         init.asm):00343 [4+1]   ZC8B8   LEAY    -$0C,Y
C8BA 8EFFF0           (         init.asm):00344 [3]             LDX     #ZFFF0
C8BD C610             (         init.asm):00345 [2]             LDB     #$10
                      (         init.asm):00346         
C8BF A6A0             (         init.asm):00347 [4+2]   ZC8BF   LDA     ,Y+
C8C1 A780             (         init.asm):00348 [4+2]           STA     ,X+
C8C3 5A               (         init.asm):00349 [2]             DECB
C8C4 26F9             (         init.asm):00350 [3]             BNE     ZC8BF
C8C6 B6CC2B           (         init.asm):00351 [5]             LDA     >MEMEND
C8C9 48               (         init.asm):00352 [2]             ASLA
C8CA 48               (         init.asm):00353 [2]             ASLA
C8CB 48               (         init.asm):00354 [2]             ASLA
C8CC 48               (         init.asm):00355 [2]             ASLA
C8CD 5F               (         init.asm):00356 [2]             CLRB
C8CE 830001           (         init.asm):00357 [4]             SUBD    #$0001
C8D1 FDCC2B           (         init.asm):00358 [6]             STD     >MEMEND
C8D4 17FC42           (         init.asm):00359 [9]             LBSR    ZC4D6
C8D7 BACC33           (         init.asm):00360 [5]             ORA     >CPUTYP
C8DA F6DFD0           (         init.asm):00361 [5]             LDB     >ZDFD0
C8DD C5F0             (         init.asm):00362 [2]             BITB    #$F0
C8DF 2702             (         init.asm):00363 [3]             BEQ     ZC8E3
C8E1 8A01             (         init.asm):00364 [2]             ORA     #$01
                      (         init.asm):00365         
C8E3 F6E005           (         init.asm):00366 [5]     ZC8E3   LDB     >ZE005
C8E6 2715             (         init.asm):00367 [3]             BEQ     ZC8FD
C8E8 C1FF             (         init.asm):00368 [2]             CMPB    #$FF
C8EA 2711             (         init.asm):00369 [3]             BEQ     ZC8FD
C8EC F1E0C5           (         init.asm):00370 [5]             CMPB    >ZE0C5
C8EF 260C             (         init.asm):00371 [3]             BNE     ZC8FD
C8F1 F1E045           (         init.asm):00372 [5]             CMPB    >ZE045
C8F4 2607             (         init.asm):00373 [3]             BNE     ZC8FD
C8F6 F1E085           (         init.asm):00374 [5]             CMPB    >ZE085
C8F9 2602             (         init.asm):00375 [3]             BNE     ZC8FD
C8FB 8A04             (         init.asm):00376 [2]             ORA     #$04
                      (         init.asm):00377         
C8FD BEE800           (         init.asm):00378 [6]     ZC8FD   LDX     >$E800
C900 3410             (         init.asm):00379 [5+2]           PSHS    X
C902 8E99AA           (         init.asm):00380 [3]             LDX     #$99AA
C905 BFE800           (         init.asm):00381 [6]             STX     >$E800
C908 BCE800           (         init.asm):00382 [7]             CMPX    >$E800
C90B 3510             (         init.asm):00383 [5+2]           PULS    X
C90D 2602             (         init.asm):00384 [3]             BNE     ZC911
C90F 8A10             (         init.asm):00385 [2]             ORA     #$10
                      (         init.asm):00386         
C911 BFE800           (         init.asm):00387 [6]     ZC911   STX     >$E800
C914 B7CC33           (         init.asm):00388 [5]             STA     >CPUTYP
C917 7ECD00           (         init.asm):00389 [4]             JMP     >COLDST
                      (         init.asm):00390         
                      (         init.asm):00391         *
                      (         init.asm):00392         
C91A 1F98             (         init.asm):00393 [6]     ZC91A   TFR     B,A
C91C 880F             (         init.asm):00394 [2]             EORA    #$0F
C91E B7FFFD           (         init.asm):00395 [5]             STA     >ZFFFD
C921 39               (         init.asm):00396 [5]             RTS
                      (         init.asm):00397         
                      (         init.asm):00398         *
                      (         init.asm):00399         
C922 C60C             (         init.asm):00400 [2]     ZC922   LDB     #$0C
C924 108EDFD0         (         init.asm):00401 [4]             LDY     #ZDFD0
                      (         init.asm):00402         *       LDX     #STARTR+16
C928 8EC100           (         init.asm):00403 [3]             LDX     #STARTR
                      (         init.asm):00404         
C92B 8CC200           (         init.asm):00405 [4]     ZC92B   CMPX    #STARTR+256
C92E 270D             (         init.asm):00406 [3]             BEQ     ZC93D
C930 A680             (         init.asm):00407 [4+2]           LDA     ,X+
C932 27F7             (         init.asm):00408 [3]             BEQ     ZC92B
C934 A7A0             (         init.asm):00409 [4+2]           STA     ,Y+
C936 7CCC2B           (         init.asm):00410 [7]             INC     >MEMEND
C939 5A               (         init.asm):00411 [2]             DECB
C93A 26EF             (         init.asm):00412 [3]             BNE     ZC92B
C93C 39               (         init.asm):00413 [5]             RTS
                      (         init.asm):00414         
C93D 8EC100           (         init.asm):00415 [3]     ZC93D   LDX     #STARTR
                      (         init.asm):00416         
C940 8CC110           (         init.asm):00417 [4]     ZC940   CMPX    #STARTR+16
C943 270C             (         init.asm):00418 [3]             BEQ     ZC951
C945 A680             (         init.asm):00419 [4+2]           LDA     ,X+
C947 27F7             (         init.asm):00420 [3]             BEQ     ZC940
C949 A7A0             (         init.asm):00421 [4+2]           STA     ,Y+
C94B 7CCC2B           (         init.asm):00422 [7]             INC     >MEMEND
C94E 5A               (         init.asm):00423 [2]             DECB
C94F 26EF             (         init.asm):00424 [3]             BNE     ZC940
                      (         init.asm):00425         
C951 39               (         init.asm):00426 [5]     ZC951   RTS
                      (         init.asm):00427         
                      (         init.asm):00428                 END

Symbol Table:
[ G] COLDST                           CD00
[ G] CPUTYP                           CC33
[ G] DCHECK                           DE0F
[ G] DDRIVE                           DE0C
[ G] DINIT                            DE15
[ G] DWARM                            DE18
[ G] ESCRTN                           CC16
[ G] FMSCAL                           D406
[ G] IHNDLR                           D3E7
[ G] INBUFF                           CD1B
[ G] INCH                             CD09
[ G] INCH2                            CD0C
[ G] INDECM                           CD48
[ G] initerr                          C4A8
[ G] LNBUFF                           C080
[ G] LNBUFP                           CC14
[ G] MEMEND                           CC2B
[ G] OUTCH                            CD0F
[ G] OUTCH2                           CD12
[ G] PRCRLF                           CD24
[ G] PROMPT                           CC4E
[ G] PSTRNG                           CD1E
[ G] RENTER                           CD06
[ G] SFRES1                           C850
[ G] SMONTH                           CC0E
[ G] STAR                             C400
[ G] STAR0                            C407
[ G] STARTR                           C100
[ G] STAT                             CD4E
[ G] STIME                            D370
[ G] SYSFCB                           C840
[ G] TIMINE                           D3FB
[ G] TIMOFF                           D3ED
[ G] TIMON                            D3EF
[ G] TIMOUT                           D3F9
[ G] TMINIT                           D3F1
[ G] TRMCHK                           D3F7
[ G] TRMINT                           D3F5
[ G] Vers                             C402
[ G] WARMST                           CD03
[ G] ZC43A                            C437
[ G] ZC47E                            C4B4
[ G] ZC488                            C4C7
[ G] ZC4A0                            C4DF
[ G] ZC4AE                            C4F1
[ G] ZC4B0                            C4F3
[ G] ZC4B2                            C4F5
[ G] ZC4BB                            C4FE
[ G] ZC4C4                            C507
[ G] ZC4CA                            C50D
[ G] ZC4D6                            C519
[ G] ZC555                            C520
[ G] ZC810                            C533
[ G] ZC82B                            C55E
[ G] ZC82E                            C561
[ G] ZC867                            C867
[ G] ZC874                            C874
[ G] ZC888                            C888
[ G] ZC889                            C889
[ G] ZC890                            C890
[ G] ZC8B3                            C8B3
[ G] ZC8B8                            C8B8
[ G] ZC8BF                            C8BF
[ G] ZC8E3                            C8E3
[ G] ZC8FD                            C8FD
[ G] ZC911                            C911
[ G] ZC91A                            C91A
[ G] ZC922                            C922
[ G] ZC92B                            C92B
[ G] ZC93D                            C93D
[ G] ZC940                            C940
[ G] ZC951                            C951
[ G] ZD0F0                            D0F0
[ G] ZD0F1                            D0F1
[ G] ZD3FD                            D3FD
[ G] ZDFD0                            DFD0
[ G] ZDFDC                            DFDC
[ G] ZDFDD                            DFDD
[ G] ZE005                            E005
[ G] ZE045                            E045
[ G] ZE085                            E085
[ G] ZE090                            E090
[ G] ZE0C5                            E0C5
[ G] ZF810                            F810
[ G] ZFFF0                            FFF0
[ G] ZFFFC                            FFFC
[ G] ZFFFD                            FFFD
