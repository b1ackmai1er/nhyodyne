esptest.asm:
     1                          ;________________________________________________________________________________________________________________________________
     2                          ;
     3                          ;	Nhyodyne CP/M ESP IO test program
     4                          ;
     5                          ;  DWERNER 07/1/2023 	Initial
     6                          ;________________________________________________________________________________________________________________________________
     7                          
     8                          BDOS:           EQU $0005       ; BDOS invocation vector
     9                          
    10                          ESP0:           EQU 9CH         ; ESP0 IO PORT
    11                          
    12                          ESP_STATUS:     EQU 9EH         ; ESP  STATUS PORT
    13                                                          ; MSB XX S S S S S S
    14                                                          ;        | | | | | |- ESP0 READY OUTPUT
    15                                                          ;        | | | | |--- ESP0 BUSY
    16                                                          ;        | | | |----- ESP0 SPARE
    17                                                          ;        | | |------- ESP1 READY OUTPUT
    18                                                          ;        | |--------- ESP1 BUSY
    19                                                          ;        |----------- ESP1 SPARE
    20                          ;
    21                          ;
    22                                  ORG     0100H
    23                          
    24   000000 310080                  LD      sp,8000H        ; setup our private stack
    25                          ;
    26                          
    27   000003 0e09                    LD      C,9
    28   000005 11c402                  LD      DE,MENU
    29   000008 cd0500                  CALL    BDOS            ; PRINT OPENING MENU
    30                          
    31                          
    32                          MNULOOP:
    33   00000b 0e01                    LD      C,1
    34   00000d cd0500                  CALL    BDOS            ; Get Menu Selection
    35                          
    36                          ; TERMINAL TESTS
    37   000010 fe31                    CP      '1'
    38   000012 ca7700                  JP      Z,VGA_SINGLE_CHAR
    39   000015 fe32                    CP      '2'
    40   000017 ca8400                  JP      Z,VGA_100SINGLE_CHAR
    41   00001a fe33                    CP      '3'
    42   00001c ca9700                  JP      Z,VGA_OUT_STRING
    43   00001f fe34                    CP      '4'
    44   000021 caad00                  JP      Z,GET_KEY_IN
    45   000024 fe35                    CP      '5'
    46   000026 cabe00                  JP      Z,GET_KEY_CHARS_IN_BUFFER
    47   000029 fe36                    CP      '6'
    48   00002b cacf00                  JP      Z,SET_CURSOR
    49                          
    50                          ; SERIAL TESTS
    51   00002e fe37                    CP      '7'
    52   000030 caeb00                  JP      Z,SET_BAUD
    53   000033 fe38                    CP      '8'
    54   000035 ca2f01                  JP      Z,SET_MODE
    55   000038 fe39                    CP      '9'
    56   00003a ca4b01                  JP      Z,SERIAL_TX_CHAR
    57   00003d fe41                    CP      'A'
    58   00003f ca5801                  JP      Z,SERIAL_TX_STRING
    59   000042 fe42                    CP      'B'
    60   000044 ca6e01                  JP      Z,GET_SERIAL_IN
    61   000047 fe43                    CP      'C'
    62   000049 ca7f01                  JP      Z,GET_SERIAL_CHARS_IN_BUFFER
    63                          
    64                          ; SOUND TESTS
    65   00004c fe44                    CP      'D'
    66   00004e ca9001                  JP      Z,PLAY_STRING
    67   000051 fe45                    CP      'E'
    68   000053 caa601                  JP      Z,PLAY_SOUND
    69   000056 fe46                    CP      'F'
    70   000058 cabd01                  JP      Z,SET_VOLUME
    71                          
    72                          ; GRAPHICS TESTS
    73   00005b fe47                    CP      'G'
    74   00005d caca01                  JP      Z,SET_RESOLUTION
    75   000060 fe48                    CP      'H'
    76   000062 caf401                  JP      Z,LOAD_FONT
    77   000065 fe49                    CP      'I'
    78   000067 ca1b02                  JP      Z,CLEAR_SCREEN
    79                          
    80                          
    81                          ; EXIT
    82   00006a fe5a                    CP      'Z'
    83   00006c ca7200                  JP      Z,EXIT
    84   00006f c30b00                  JP      MNULOOP
    85                          
    86                          EXIT:
    87                          ;
    88   000072 0e00                    LD      C,0
    89   000074 cd0500                  CALL    BDOS            ; return to CP/M via reset
    90                          
    91                          
    92                          
    93                          VGA_SINGLE_CHAR:
    94   000077 3e01                    LD      A,1             ; SEND OPCODE 1 (OUT VGA CHAR)
    95   000079 cd2302                  CALL    OUTESP0
    96   00007c 3e2a                    LD      A,'*'           ; SEND CHAR TO OUTPUT
    97   00007e cd2302                  CALL    OUTESP0
    98   000081 c30b00                  JP      MNULOOP
    99                          
   100                          VGA_100SINGLE_CHAR:
   101   000084 0e64                    LD      c,100
   102                          VGA_100SINGLE_CHAR_1:
   103   000086 3e01                    LD      A,1             ; SEND OPCODE 1 (OUT VGA CHAR)
   104   000088 cd2302                  CALL    OUTESP0
   105   00008b 3e2a                    LD      A,'*'           ; SEND CHAR TO OUTPUT
   106   00008d cd2302                  CALL    OUTESP0
   107   000090 0d                      DEC     c
   108   000091 c28600                  JP      nz,VGA_100SINGLE_CHAR_1
   109   000094 c30b00                  JP      MNULOOP
   110                          
   111                          VGA_OUT_STRING:
   112   000097 217d04                  LD      HL,VGA_TEST
   113   00009a 3e02                    LD      A,2             ; SEND OPCODE 2 (OUT VGA NULL TERM STRING)
   114   00009c cd2302                  CALL    OUTESP0
   115                          VGA_OUT_STRING_1:
   116   00009f 7e                      LD      A,(HL)          ; SEND CHAR TO OUTPUT
   117   0000a0 cd2302                  CALL    OUTESP0
   118   0000a3 7e                      LD      A,(HL)          ; GET CHAR
   119   0000a4 23                      INC     HL
   120   0000a5 fe00                    CP      0
   121   0000a7 c29f00                  JP      nz,VGA_OUT_STRING_1
   122   0000aa c30b00                  JP      MNULOOP
   123                          
   124                          
   125                          GET_KEY_IN:
   126   0000ad cd5002                  CALL    CLEARESP0
   127   0000b0 3e03                    LD      A,3             ; SEND OPCODE 3 (GET KEY IN)
   128   0000b2 cd2302                  CALL    OUTESP0
   129   0000b5 cd3602                  CALL    INESP0_WAIT
   130   0000b8 cd7e02                  CALL    prtchr
   131   0000bb c30b00                  JP      MNULOOP
   132                          
   133                          
   134                          GET_KEY_CHARS_IN_BUFFER:
   135   0000be cd5002                  CALL    CLEARESP0
   136   0000c1 3e04                    LD      A,4             ; SEND OPCODE 4 (GET KEY BUFFER LENGTH)
   137   0000c3 cd2302                  CALL    OUTESP0
   138   0000c6 cd3602                  CALL    INESP0_WAIT
   139   0000c9 cd6e02                  CALL    prthex
   140   0000cc c30b00                  JP      MNULOOP
   141                          
   142                          
   143                          SET_CURSOR:
   144   0000cf 0e09                    LD      C,9
   145   0000d1 110405                  LD      DE,CURSOR_PROMPT
   146   0000d4 cd0500                  CALL    BDOS            ; PRINT PROMPT
   147   0000d7 0e01                    LD      C,1
   148   0000d9 cd0500                  CALL    BDOS            ; Get Selection
   149   0000dc e601                    AND     1
   150   0000de f5                      PUSH    AF
   151   0000df 3e05                    LD      A,5             ; SEND OPCODE 5 (SET CURSOR)
   152   0000e1 cd2302                  CALL    OUTESP0
   153   0000e4 f1                      POP     AF
   154   0000e5 cd2302                  CALL    OUTESP0
   155   0000e8 c30b00                  JP      MNULOOP
   156                          
   157                          
   158                          SET_BAUD:
   159   0000eb 0e09                    LD      C,9
   160   0000ed 112a05                  LD      DE,BAUD_PROMPT
   161   0000f0 cd0500                  CALL    BDOS            ; PRINT PROMPT
   162   0000f3 0e0a                    LD      C,0AH
   163   0000f5 119206                  LD      DE,BUFFER
   164   0000f8 cd0500                  CALL    BDOS            ; GET INPUT
   165   0000fb 219406                  LD      HL,BUFFER+2
   166   0000fe cda502                  CALL    HEXBYTE
   167   000101 328006                  LD      (PARMS+2),A
   168   000104 cda502                  CALL    HEXBYTE
   169   000107 327f06                  LD      (PARMS+1),A
   170   00010a cda502                  CALL    HEXBYTE
   171   00010d 327e06                  LD      (PARMS),A
   172                          
   173   000110 3e06                    LD      A,6             ; SEND OPCODE 6 (SET BAUD)
   174   000112 cd2302                  CALL    OUTESP0
   175   000115 3a7e06                  LD      A,(PARMS)
   176   000118 cd2302                  CALL    OUTESP0
   177   00011b 3a7f06                  LD      A,(PARMS+1)
   178   00011e cd2302                  CALL    OUTESP0
   179   000121 3a8006                  LD      A,(PARMS+2)
   180   000124 cd2302                  CALL    OUTESP0
   181   000127 3e00                    LD      A,0
   182   000129 cd2302                  CALL    OUTESP0
   183   00012c c30b00                  JP      MNULOOP
   184                          
   185                          SET_MODE:
   186   00012f 0e09                    LD      C,9
   187   000131 117005                  LD      DE,MODE_PROMPT
   188   000134 cd0500                  CALL    BDOS            ; PRINT PROMPT
   189   000137 0e01                    LD      C,1
   190   000139 cd0500                  CALL    BDOS            ; Get Selection
   191   00013c e607                    AND     7
   192   00013e f5                      PUSH    AF
   193   00013f 3e07                    LD      A,7             ; SEND OPCODE 7 (SET MODE)
   194   000141 cd2302                  CALL    OUTESP0
   195   000144 f1                      POP     AF
   196   000145 cd2302                  CALL    OUTESP0
   197   000148 c30b00                  JP      MNULOOP
   198                          
   199                          
   200                          SERIAL_TX_CHAR:
   201   00014b 3e08                    LD      A,8             ; SEND OPCODE 8 (TX CHAR)
   202   00014d cd2302                  CALL    OUTESP0
   203   000150 3e2a                    LD      A,'*'
   204   000152 cd2302                  CALL    OUTESP0
   205   000155 c30b00                  JP      MNULOOP
   206                          
   207                          
   208                          SERIAL_TX_STRING:
   209   000158 214c05                  LD      HL,SERIAL_TEST
   210   00015b 3e09                    LD      A,9             ; SEND OPCODE 9 (OUT SERIAL NULL TERM STRING)
   211   00015d cd2302                  CALL    OUTESP0
   212                          SERIAL_TX_STRING_1:
   213   000160 7e                      LD      A,(HL)          ; SEND CHAR TO OUTPUT
   214   000161 cd2302                  CALL    OUTESP0
   215   000164 7e                      LD      A,(HL)          ; GET CHAR
   216   000165 23                      INC     HL
   217   000166 fe00                    CP      0
   218   000168 c26001                  JP      nz,SERIAL_TX_STRING_1
   219   00016b c30b00                  JP      MNULOOP
   220                          
   221                          
   222                          GET_SERIAL_IN:
   223   00016e cd5002                  CALL    CLEARESP0
   224   000171 3e0a                    LD      A,10            ; SEND OPCODE 10 (GET SERIAL IN)
   225   000173 cd2302                  CALL    OUTESP0
   226   000176 cd3602                  CALL    INESP0_WAIT
   227   000179 cd7e02                  CALL    prtchr
   228   00017c c30b00                  JP      MNULOOP
   229                          
   230                          
   231                          GET_SERIAL_CHARS_IN_BUFFER:
   232   00017f cd5002                  CALL    CLEARESP0
   233   000182 3e0b                    LD      A,11            ; SEND OPCODE 11 (GET SERIAL BUFFER LENGTH)
   234   000184 cd2302                  CALL    OUTESP0
   235   000187 cd3602                  CALL    INESP0_WAIT
   236   00018a cd6e02                  CALL    prthex
   237   00018d c30b00                  JP      MNULOOP
   238                          
   239                          
   240                          PLAY_STRING:
   241   000190 21f305                  LD      HL,PLAY_TEST
   242   000193 3e0c                    LD      A,12            ; SEND OPCODE 12 (PLAY SOUND STRING)
   243   000195 cd2302                  CALL    OUTESP0
   244                          PLAY_STRING_1:
   245   000198 7e                      LD      A,(HL)          ; SEND CHAR TO OUTPUT
   246   000199 cd2302                  CALL    OUTESP0
   247   00019c 7e                      LD      A,(HL)          ; GET CHAR
   248   00019d 23                      INC     HL
   249   00019e fe00                    CP      0
   250   0001a0 c29801                  JP      nz,PLAY_STRING_1
   251   0001a3 c30b00                  JP      MNULOOP
   252                          
   253                          PLAY_SOUND:
   254   0001a6 216606                  LD      HL,SOUND_TEST
   255   0001a9 3e0d                    LD      A,13            ; SEND OPCODE 13 (PLAY SOUND)
   256   0001ab cd2302                  CALL    OUTESP0
   257   0001ae 0e18                    LD      C,24
   258                          PLAY_SOUND_1:
   259   0001b0 7e                      LD      A,(HL)          ; SEND CHAR TO OUTPUT
   260   0001b1 cd2302                  CALL    OUTESP0
   261   0001b4 7e                      LD      A,(HL)          ; GET CHAR
   262   0001b5 23                      INC     HL
   263   0001b6 0d                      DEC     C
   264   0001b7 c2b001                  JP      nz,PLAY_SOUND_1
   265   0001ba c30b00                  JP      MNULOOP
   266                          
   267                          SET_VOLUME:
   268   0001bd 3e0e                    LD      A,14            ; SEND OPCODE 14 (SET VOLUME)
   269   0001bf cd2302                  CALL    OUTESP0
   270   0001c2 3e07                    LD      A,7
   271   0001c4 cd2302                  CALL    OUTESP0
   272   0001c7 c30b00                  JP      MNULOOP
   273                          
   274                          
   275                          SET_RESOLUTION:
   276   0001ca 0e09                    LD      C,9
   277   0001cc 11ac05                  LD      DE,RESOLUTION_PROMPT
   278   0001cf cd0500                  CALL    BDOS            ; PRINT PROMPT
   279   0001d2 0e0a                    LD      C,0AH
   280   0001d4 119206                  LD      DE,BUFFER
   281   0001d7 cd0500                  CALL    BDOS            ; GET INPUT
   282   0001da 219406                  LD      HL,BUFFER+2
   283   0001dd cda502                  CALL    HEXBYTE
   284   0001e0 327e06                  LD      (PARMS),A
   285   0001e3 cd6e02                  CALL    prthex
   286   0001e6 3e0f                    LD      A,15            ; SEND OPCODE 15 (SET RESOLUTION)
   287   0001e8 cd2302                  CALL    OUTESP0
   288   0001eb 3a7e06                  LD      A,(PARMS)
   289   0001ee cd2302                  CALL    OUTESP0
   290   0001f1 c30b00                  JP      MNULOOP
   291                          LOAD_FONT:
   292   0001f4 0e09                    LD      C,9
   293   0001f6 11d605                  LD      DE,FONT_PROMPT
   294   0001f9 cd0500                  CALL    BDOS            ; PRINT PROMPT
   295   0001fc 0e0a                    LD      C,0AH
   296   0001fe 119206                  LD      DE,BUFFER
   297   000201 cd0500                  CALL    BDOS            ; GET INPUT
   298   000204 219406                  LD      HL,BUFFER+2
   299   000207 cda502                  CALL    HEXBYTE
   300   00020a 327e06                  LD      (PARMS),A
   301                          
   302   00020d 3e10                    LD      A,16            ; SEND OPCODE 16 (SET FONT)
   303   00020f cd2302                  CALL    OUTESP0
   304   000212 3a7e06                  LD      A,(PARMS)
   305   000215 cd2302                  CALL    OUTESP0
   306   000218 c30b00                  JP      MNULOOP
   307                          
   308                          CLEAR_SCREEN:
   309   00021b 3e11                    LD      A,17            ; SEND OPCODE 17 (CLEAR SCREEN)
   310   00021d cd2302                  CALL    OUTESP0
   311   000220 c30b00                  JP      MNULOOP
   312                          
   313                          ;
   314                          
   315                          ;
   316                          ;
   317                          ;
   318                          ;
   319                          
   320                          
   321                          
   322                          ;
   323                          ;
   324                          ;
   325                          
   326                          ; SEND BYTE TO ESP0
   327                          OUTESP0:
   328   000223 f5                      PUSH    AF
   329                          OUTESP0_1:
   330   000224 db9e                    IN      A,(ESP_STATUS)  ; GET STATUS
   331   000226 e602                    AND     2               ; Is ESP0 BUSY?
   332   000228 c22402                  JP      NZ,OUTESP0_1    ; IF BUSY WAIT (SHOULD HAVE TIMEOUT HERE)
   333   00022b f1                      POP     AF
   334   00022c d39c                    OUT     (ESP0),A        ; SEND BYTE
   335                          OUTESP0_2:
   336   00022e db9e                    IN      A,(ESP_STATUS)  ; GET STATUS
   337   000230 e602                    AND     2               ; Is ESP0 BUSY?
   338   000232 ca2e02                  JP      Z,OUTESP0_2     ; IF NOT BUSY WAIT (SHOULD HAVE TIMEOUT HERE)
   339   000235 c9                      RET
   340                          
   341                          
   342                          ; GET BYTE FROM ESP0 (BLOCKING)
   343                          INESP0_WAIT:
   344                          INESP0_WAIT_1:
   345   000236 db9e                    IN      A,(ESP_STATUS)  ; GET STATUS
   346   000238 e602                    AND     2               ; Is ESP0 BUSY?
   347   00023a c23602                  JP      NZ,INESP0_WAIT_1; IF BUSY, WAIT (SHOULD HAVE TIMEOUT HERE)
   348   00023d db9e                    IN      A,(ESP_STATUS)  ; GET STATUS
   349   00023f e601                    AND     1               ; Is there data?
   350   000241 ca3602                  JP      Z,INESP0_WAIT_1 ; IF NO, BUSY WAIT
   351   000244 db9c                    IN      A,(ESP0)        ; GET BYTE
   352   000246 f5                      PUSH    AF
   353                          INESP0_WAIT_2:
   354   000247 db9e                    IN      A,(ESP_STATUS)  ; GET STATUS
   355   000249 e602                    AND     2               ; Is ESP0 BUSY?
   356   00024b ca4702                  JP      Z,INESP0_WAIT_2 ; IF NOT BUSY WAIT (SHOULD HAVE TIMEOUT HERE)
   357   00024e f1                      POP     AF
   358   00024f c9                      RET
   359                          
   360                          ; CLEAR ESP0 INPUT BYTE QUEUE
   361                          CLEARESP0:
   362   000250 cd5b02                  CALL    INESP0
   363   000253 db9e                    IN      A,(ESP_STATUS)  ; GET STATUS
   364   000255 e601                    AND     1               ; Is there MORE data?
   365   000257 c25002                  JP      NZ,CLEARESP0    ; IF YES, LOOP
   366   00025a c9                      RET
   367                          
   368                          ; GET BYTE FROM ESP0 (NON BLOCKING)
   369                          INESP0:
   370   00025b db9e                    IN      A,(ESP_STATUS)  ; GET STATUS
   371   00025d e602                    AND     2               ; Is ESP0 BUSY?
   372   00025f c25b02                  JP      NZ,INESP0       ; IF BUSY, WAIT (SHOULD HAVE TIMEOUT HERE)
   373   000262 db9c                    IN      A,(ESP0)        ; GET BYTE
   374   000264 f5                      PUSH    AF
   375                          INESP0_1:
   376   000265 db9e                    IN      A,(ESP_STATUS)  ; GET STATUS
   377   000267 e602                    AND     2               ; Is ESP0 BUSY?
   378   000269 ca6502                  JP      Z,INESP0_1      ; IF NOT BUSY WAIT (SHOULD HAVE TIMEOUT HERE)
   379   00026c f1                      POP     AF
   380   00026d c9                      RET
   381                          
   382                          
   383                          ;
   384                          ;
   385                          ;
   386                          ;
   387                          ;
   388                          ;
   389                          prthex:
   390   00026e f5                      PUSH    af              ; save AF
   391   00026f d5                      PUSH    de              ; save DE
   392   000270 cd8d02                  CALL    hexascii        ; convert value in A to hex chars in DE
   393   000273 7a                      LD      a,d             ; get the high order hex char
   394   000274 cd7e02                  CALL    prtchr          ; print it
   395   000277 7b                      LD      a,e             ; get the low order hex char
   396   000278 cd7e02                  CALL    prtchr          ; print it
   397   00027b d1                      POP     de              ; restore DE
   398   00027c f1                      POP     af              ; restore AF
   399   00027d c9                      RET                     ; done
   400                          prtchr:
   401   00027e f5                      PUSH    AF
   402   00027f c5                      PUSH    bc              ; save registers
   403   000280 d5                      PUSH    de
   404   000281 e5                      PUSH    hl
   405   000282 5f                      LD      E,A
   406   000283 0e02                    LD      C,2
   407   000285 cd0500                  CALL    BDOS            ; return to CP/M via reset
   408   000288 e1                      POP     hl              ; restore registers
   409   000289 d1                      POP     de
   410   00028a c1                      POP     bc
   411   00028b f1                      POP     AF
   412   00028c c9                      RET
   413                          ;
   414                          ; Convert binary value in A to ascii hex characters in DE
   415                          ;
   416                          hexascii:
   417   00028d 57                      LD      d,a             ; save A in D
   418   00028e cd9c02                  CALL    hexconv         ; convert low nibble of A to hex
   419   000291 5f                      LD      e,a             ; save it in E
   420   000292 7a                      LD      a,d             ; get original value back
   421   000293 07                      RLCA                    ; rotate high order nibble to low bits
   422   000294 07                      RLCA
   423   000295 07                      RLCA
   424   000296 07                      RLCA
   425   000297 cd9c02                  CALL    hexconv         ; convert nibble
   426   00029a 57                      LD      d,a             ; save it in D
   427   00029b c9                      RET                     ; done
   428                          ;
   429                          ; Convert low nibble of A to ascii hex
   430                          ;
   431                          hexconv:
   432   00029c e60f                    AND     $0F             ; low nibble only
   433   00029e c690                    ADD     a,$90
   434   0002a0 27                      DAA
   435   0002a1 ce40                    ADC     a,$40
   436   0002a3 27                      DAA
   437   0002a4 c9                      RET
   438                          ;
   439                          
   440                          ;
   441                          ;__HEXBYTE____________________________________________________________________
   442                          ;
   443                          ;	GET ONE BYTE OF HEX DATA FROM BUFFER IN HL, RETURN IN A
   444                          ;_____________________________________________________________________________
   445                          ;
   446                          HEXBYTE:
   447   0002a5 cdb602                  CALL    NIBL            ; CONVERT HEX CHAR TO BINARY VALUE IN A & INC HL
   448   0002a8 cb27                    SLA     A
   449   0002aa cb27                    SLA     A
   450   0002ac cb27                    SLA     A
   451   0002ae cb27                    SLA     A
   452   0002b0 4f                      LD      C,A
   453   0002b1 cdb602                  CALL    NIBL            ; CONVERT HEX CHAR TO BINARY VALUE IN A & INC HL
   454   0002b4 b1                      OR      C               ; COMBINE WITH WORKING VALUE
   455   0002b5 c9                      RET                     ; AND DONE
   456                          ;
   457                          ;
   458                          ;__NIBL_______________________________________________________________________
   459                          ;
   460                          ;	GET ONE BYTE OF HEX DATA FROM BUFFER IN HL, RETURN IN A
   461                          ;_____________________________________________________________________________
   462                          ;
   463                          NIBL:
   464   0002b6 7e                      LD      A,(HL)          ; GET K B. DATA
   465   0002b7 23                      INC     HL              ; INC KB POINTER
   466   0002b8 fe40                    CP      40H             ; TEST FOR ALPHA
   467   0002ba 3003                    JR      NC,ALPH
   468   0002bc e60f                    AND     0FH             ; GET THE BITS
   469   0002be c9                      RET
   470                          ALPH:
   471   0002bf e60f                    AND     0FH             ; GET THE BITS
   472   0002c1 c609                    ADD     A,09H           ; MAKE IT HEX A-F
   473   0002c3 c9                      RET
   474                          ;
   475                          ;
   476                          ;
   477                          MENU:
   478   0002c4 0a0d                    DB      0AH,0DH
   479   0002c6 4e686f64796e6520        DM      "Nhodyne ESP32 IO board test"
                455350333220494f
                20626f6172642074
                657374          
   480   0002e1 0a0d0a0d0a0d            DB      0AH,0DH,0AH,0DH,0AH,0DH
   481   0002e7 313e204f75747075        DM      "1> Output single char to VGA"
                742073696e676c65
                206368617220746f
                20564741        
   482   000303 0a0d                    DB      0AH,0DH
   483   000305 323e204f75747075        DM      "2> Output 100 single chars to VGA"
                7420313030207369
                6e676c6520636861
                727320746f205647
                41              
   484   000326 0a0d                    DB      0AH,0DH
   485   000328 333e204f75747075        DM      "3> Output string to VGA"
                7420737472696e67
                20746f20564741  
   486   00033f 0a0d                    DB      0AH,0DH
   487   000341 343e20476574204b        DM      "4> Get Keystroke"
                65797374726f6b65
   488   000351 0a0d                    DB      0AH,0DH
   489   000353 353e20476574204b        DM      "5> Get Key Buffer Length"
                6579204275666665
                72204c656e677468
   490   00036b 0a0d                    DB      0AH,0DH
   491   00036d 363e205365742043        DM      "6> Set Cursor visibility"
                7572736f72207669
                736962696c697479
   492   000385 0a0d                    DB      0AH,0DH
   493   000387 0a0d                    DB      0AH,0DH
   494   000389 373e205365742073        DM      "7> Set serial baud rate"
                657269616c206261
                75642072617465  
   495   0003a0 0a0d                    DB      0AH,0DH
   496   0003a2 383e205365742073        DM      "8> Set serial mode"
                657269616c206d6f
                6465            
   497   0003b4 0a0d                    DB      0AH,0DH
   498   0003b6 393e205365726961        DM      "9> Serial TX single char"
                6c2054582073696e
                676c652063686172
   499   0003ce 0a0d                    DB      0AH,0DH
   500   0003d0 413e205365726961        DM      "A> Serial TX string"
                6c20545820737472
                696e67          
   501   0003e3 0a0d                    DB      0AH,0DH
   502   0003e5 423e205365726961        DM      "B> Serial RX"
                6c205258        
   503   0003f1 0a0d                    DB      0AH,0DH
   504   0003f3 433e205365726961        DM      "C> Serial Buffer Length"
                6c20427566666572
                204c656e677468  
   505   00040a 0a0d                    DB      0AH,0DH
   506   00040c 0a0d                    DB      0AH,0DH
   507   00040e 443e20506c617920        DM      "D> Play String"
                537472696e67    
   508   00041c 0a0d                    DB      0AH,0DH
   509   00041e 453e20506c617920        DM      "E> Play Sound"
                536f756e64      
   510   00042b 0a0d                    DB      0AH,0DH
   511   00042d 463e205365742056        DM      "F> Set Volume"
                6f6c756d65      
   512   00043a 0a0d                    DB      0AH,0DH
   513   00043c 0a0d                    DB      0AH,0DH
   514   00043e 473e205365742052        DM      "G> Set Resolution"
                65736f6c7574696f
                6e              
   515   00044f 0a0d                    DB      0AH,0DH
   516   000451 483e204c6f616420        DM      "H> Load Font"
                466f6e74        
   517   00045d 0a0d                    DB      0AH,0DH
   518   00045f 493e20436c656172        DM      "I> Clear"
   519   000467 0a0d                    DB      0AH,0DH
   520                          
   521   000469 0a0d                    DB      0AH,0DH
   522   00046b 5a3e204578697420        DM      "Z> Exit Program"
                50726f6772616d  
   523   00047a 0a0d                    DB      0AH,0DH
   524                          
   525   00047c 24                      DM      "$"
   526                          
   527                          VGA_TEST:
   528   00047d 0a0d                    DB      0AH,0DH
   529   00047f 1b5b34303b33316d        DM      27,"[40;31mH",27,"[40;32mI ",27,"[40;33mF",27,"[40;34mR"
                481b5b34303b3332
                6d49201b5b34303b
                33336d461b5b3430
                3b33346d52      
   530   0004a4 1b5b34303b33356d        DM      27,"[40;35mOM ",27,"[40;36mN",27,"[40;37mH",27,"[40;91mY"
                4f4d201b5b34303b
                33366d4e1b5b3430
                3b33376d481b5b34
                303b39316d59    
   531   0004ca 1b5b34303b39326d        DM      27,"[40;92mO",27,"[40;93mD",27,"[40;94mY",27,"[40;95mN"
                4f1b5b34303b3933
                6d441b5b34303b39
                346d591b5b34303b
                39356d4e        
   532   0004ee 1b5b34303b39366d        DM      27,"[40;96mE ",27,"[40;97m."
                45201b5b34303b39
                376d2e          
   533   000501 0a0d00                  DB      0AH,0DH,00H
   534                          
   535                          
   536                          CURSOR_PROMPT:
   537   000504 0a0d                    DB      0AH,0DH
   538   000506 303e44495341424c        DM      "0>DISABLE CURSOR"
                4520435552534f52
   539   000516 0a0d                    DB      0AH,0DH
   540   000518 313e454e41424c45        DM      "1>ENABLE CURSOR"
                20435552534f52  
   541   000527 0a0d                    DB      0AH,0DH
   542   000529 24                      DM      "$"
   543                          
   544                          BAUD_PROMPT:
   545   00052a 0a0d                    DB      0AH,0DH
   546   00052c 454e544552204241        DM      "ENTER BAUD RATE (6 DIGITS HEX):"
                5544205241544520
                2836204449474954
                5320484558293a  
   547   00054b 24                      DM      "$"
   548                          
   549                          SERIAL_TEST:
   550   00054c 0a0d                    DB      0AH,0DH
   551   00054e 5355434345535346        DM      "SUCCESSFUL SERIAL STRING WRITE."
                554c205345524941
                4c20535452494e47
                2057524954452e  
   552   00056d 0a0d00                  DB      0AH,0DH,00H
   553                          
   554                          MODE_PROMPT:
   555   000570 0a0d                    DB      0AH,0DH
   556   000572 454e544552205345        DM      "ENTER SERIAL MODE: (8n1=0,8e1=1,8o1=2,7n1=3,7e1=4,7o1=5):"
                5249414c204d4f44
                453a2028386e313d
                302c3865313d312c
                386f313d322c376e
                313d332c3765313d
                342c376f313d3529
                3a              
   557   0005ab 24                      DM      "$"
   558                          
   559                          RESOLUTION_PROMPT:
   560   0005ac 0a0d                    DB      0AH,0DH
   561   0005ae 454e544552205343        DM      "ENTER SCREEN RESOLUTION (2 DIGITS HEX):"
                5245454e20524553
                4f4c5554494f4e20
                2832204449474954
                5320484558293a  
   562   0005d5 24                      DM      "$"
   563                          FONT_PROMPT:
   564   0005d6 0a0d                    DB      0AH,0DH
   565   0005d8 454e54455220464f        DM      "ENTER FONT (2 DIGITS HEX):"
                4e54202832204449
                4749545320484558
                293a            
   566   0005f2 24                      DM      "$"
   567                          
   568                          PLAY_TEST:
   569   0005f3 4134203420322041        DM      "A4 4 2 A4 4 2 A#4 4 2 C5 4 2 C5 4 2 A#4 4 2 A4 4 2 G4 4 2 F4 4 2 F4 4 2 G4 4 2 A4 4 2 A4 2 2 G4 16 2 G4 2 2 P 8 2 "
                3420342032204123
                3420342032204335
                2034203220433520
                3420322041233420
                3420322041342034
                2032204734203420
                3220463420342032
                2046342034203220
                4734203420322041
                3420342032204134
                2032203220473420
                3136203220473420
                3220322050203820
                3220            
   570   000665 00                      DB      00
   571                          SOUND_TEST:
   572   000666 0500000080000000        DB      5,0,0,0, 128,0,0,0 ,120,0, 0,1,0,0 ,4, 127, 0 ,0, 2 ,1, 0  ,1, 0 ,0
                780000010000047f
                0000020100010000
   573                          PARMS:
   574   00067e 0000000000000000        DB      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                0000000000000000
                00000000        
   575                          BUFFER:
   576   000692 1400000000000000        DB      20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
                0000000000000000
                00000000        
   577                          
   578                                  .END
   579                          
